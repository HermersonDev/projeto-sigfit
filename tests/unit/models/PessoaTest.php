<?php


namespace tests\unit\models;


use Codeception\Test\Unit;
use app\models\Pessoa;
use yii\db\Connection;
use yii\db\Transaction;
use yii\web\UploadedFile;

class PessoaTest extends Unit
{
    public function setUp()
    {
        return parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function SeOMetodoScenariosRetornaUmArray()
    {
        $pessoa = new Pessoa();
        $this->assertEquals(true, is_array($pessoa->scenarios()));
    }


    /**
     * @test
     * @expectedException \Exception
     * @expectedException \Throwable
     */
    public function SeOModeloPessoaEstaSalvando()
    {
        $db = new Connection([
            'dsn' => 'mysql:host=localhost;dbname=sigfit',
            'username' => 'root',
            'password' => '',
            'charset' => 'utf8',
        ]);

        $transaction = $db->beginTransaction();

        try {

            $pessoa = new Pessoa();
            $pessoa->matricula = '20161038060041';
            $pessoa->nome = 'Usuário';
            $pessoa->email = 'usuario@email.com';
            $pessoa->curso = 'Curso Teste';
            $pessoa->periodo_curso = 1;
            $pessoa->horario_treino = '7h às 8h';
            $pessoa->save();

            $transaction->commit();

        } catch (\Exception $e) {
            $transaction->rollBack();
            throw $e;
        } catch (\Throwable $e) {
            $transaction->rollBack();
            throw $e;
        }


        $pessoa_inserida = Pessoa::findOne(['matricula' => '20161038060041']);

        $this->assertEquals($pessoa_inserida->id, $pessoa->id);
        $this->assertEquals($pessoa_inserida->matricula, $pessoa->matricula);
        $this->assertEquals($pessoa_inserida->nome, $pessoa->nome);
        $this->assertEquals($pessoa_inserida->email, $pessoa->email);
        $this->assertEquals($pessoa_inserida->curso, $pessoa->curso);
        $this->assertEquals($pessoa_inserida->periodo_curso, $pessoa->periodo_curso);
        $this->assertEquals($pessoa_inserida->horario_treino, $pessoa->horario_treino);

        $transaction->rollBack();

    }

    /**
     * @test
     */
    public function VerificarSeEstaSalvandoAImagem()
    {
        $this->markTestIncomplete('Ainda será refeito ');

        // Criar o teste para verificar se a função upload está funcionando
        // corretamente.

        $this->assertEquals(true, false);
    }

}